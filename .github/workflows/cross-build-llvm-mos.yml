name: llvm_mos_amd64
on:
  workflow_call:
    inputs:
      arch:
        description: architecture
        default: 'amd64'
        type: string
      arch_suffix:
        description: 'arch suffix'
        default: ''
        type: string
      llvm_mos_repo:
        description: 'llvm-mos repo'
        default: 'mrk-its/llvm-mos'
        type: string
      llvm_mos_sdk_repo:
        description: 'llvm-mos-sdk repo'
        default: 'mrk-its/llvm-mos-sdk'
        type: string
      llvm_mos_ref:
        description: 'llvm-mos ref'
        default: 'main'
        type: string
      llvm_mos_sdk_ref:
        description: 'llvm-mos-sdk ref'
        default: 'main'
        type: string
jobs:
  cross_build_llvm:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Checkout llvm-mos
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.llvm_mos_repo }}
          path: docker/llvm-mos/llvm-mos
          ref: ${{ inputs.llvm_mos_ref }}

      - name: Checkout llvm-mos-sdk
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.llvm_mos_sdk_repo }}
          path: docker/llvm-mos/llvm-mos-sdk
          ref: ${{inputs.llvm_mos_sdk_ref }}


      - name: cleanup
        run: |
          echo "=============================================================================="
          echo "Freeing up disk space on CI system"
          echo "=============================================================================="

          echo "Listing 100 largest packages"
          dpkg-query -Wf '${Installed-Size}\t${Package}\n' | sort -n | tail -n 100
          df -h
          echo "Removing large packages"
          sudo apt-get update
          sudo apt-get remove -y '^dotnet-.*' '^llvm-.*' 'aspnetcore.*' 'temurin.*' azure-cli google-cloud-cli \
               microsoft-edge-stable google-chrome-stable firefox powershell mono-devel \
               '^gfortran.*' 'mono-devel' 'libllvm.*' 'mysql-server-core-.*' 'libclang-common.*' \
               '^gcc-10.*' '^gcc-11.*' '^gcc-12.*' '^postgresql.*' 'libclang-cpp.*' '^.*-dev$'

          sudo apt-get autoremove -y
          sudo apt-get clean
          df -h
          echo "Removing large directories"
          sudo rm -rf /usr/share/dotnet/ /usr/share/swift /usr/share/miniconda /usr/local/lib/android
          df -h

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set short sha
        id: short_sha
        run: |
          echo "llvm_mos=$(echo ${{ github.event.inputs.llvm_mos_ref }} | cut -b 1-9)" >> $GITHUB_OUTPUT
          echo "llvm_mos_sdk=$(echo ${{ github.event.inputs.llvm_mos_sdk_ref }} | cut -b 1-7)" >> $GITHUB_OUTPUT

      - name: Check outputs
        run: echo ${{ steps.short_sha.outputs.llvm_mos }} ${{ steps.short_sha.outputs.llvm_mos_sdk }}          

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push llvm-mos
        id: docker_build_1
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: mrkits/llvm-mos:${{ steps.short_sha.outputs.llvm_mos }}-${{ steps.short_sha.outputs.llvm_mos_sdk }}-${{inputs.arch}}${{inputs.arch_suffix}}
          build-args: TARGETARCH=${{ inputs.arch }}
          platforms: ${{ inputs.arch }}
          context: docker/llvm-mos
          cache-from: type=registry,ref=mrkits/llvm-mos:${{ steps.short_sha.outputs.llvm_mos }}-${{ steps.short_sha.outputs.llvm_mos_sdk }}-${{inputs.arch}}${{inputs.arch_suffix}}
          # cache-to: type=registry,ref=mrkits/llvm-mos:llvm-mos-buildcache-${{matrix.arch}},mode=max
