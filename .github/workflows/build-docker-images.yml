name: build_docker_images
on:
  workflow_dispatch:
    inputs:
      llvm_base_image_tag:        
        description: 'llvm-mos base image tag'
        required: true
        default: 'ca75934d2-da558fc'

jobs:
  create_docker_images:
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set rust-mos short sha
        id: rust_mos
        run: echo -e "::set-output name=short_sha::$(git rev-parse --short HEAD)"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      # - name: Build and push rust-mos
      #   id: docker_build_3
      #   uses: docker/build-push-action@v2
      #   with:
      #     push: true
      #     tags: mrkits/rust-mos:${{ github.event.inputs.llvm_base_image_tag }}-${{ steps.rust_mos.outputs.short_sha }}-dist
      #     file: docker/rust-mos/Dockerfile
      #     context: .
      #     build-args: |
      #       LLVM_MOS_IMAGE=mrkits/llvm-mos:${{ github.event.inputs.llvm_base_image_tag }}

      - name: Build and push multi-platform rust-mos image
        id: docker_build_3
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: mrkits/rust-mos:${{ github.event.inputs.llvm_base_image_tag }}-${{ steps.rust_mos.outputs.short_sha }}
          file: docker/rust-mos/Dockerfile.multiarch
          platforms: linux/amd64,linux/arm64
          context: docker/rust-mos/
          build-args: |
            LLVM_MOS_IMAGE=mrkits/llvm-mos:${{ github.event.inputs.llvm_base_image_tag }}
            RUST_MOS_DIST_IMAGE=mrkits/rust-mos:ca75934d2-da558fc-ad5d187a-dist
          # RUST_MOS_DIST_IMAGE=mrkits/rust-mos:${{ github.event.inputs.llvm_base_image_tag }}-${{ steps.rust_mos.outputs.short_sha }}-dist
